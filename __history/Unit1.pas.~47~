unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

const
  BytePosition = 32770;

type
  TForm1 = class(TForm)
    btnSelectFile: TButton;
    btnChangeByte: TButton;
    OpenDialog: TOpenDialog;
    edtNewByte: TEdit;
    lblSelectedFile: TLabel;
    procedure btnSelectFileClick(Sender: TObject);
    procedure btnChangeByteClick(Sender: TObject);
  private
    { Private declarations }
    SelectedFileName: string;
    procedure ChangeBytesInFile(const FileName: string; BytePosition: Int64; NewWord: Word; NewWordText: string);
    procedure ReadBytesFromFile(const FileName: string; BytePosition: Int64; var WordValue: Word);
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.btnSelectFileClick(Sender: TObject);
var
  ReadWord: Word;
begin
  if OpenDialog.Execute then
  begin
    SelectedFileName := OpenDialog.FileName;
    lblSelectedFile.Caption := 'Выбранный файл: ' + SelectedFileName;
    ReadBytesFromFile(SelectedFileName, BytePosition, ReadWord);
    edtNewByte.Text := IntToStr(ReadWord);
  end;
end;

procedure TForm1.btnChangeByteClick(Sender: TObject);
var
  NewWordInt: Integer;
  NewWord: Word;
  NewWordText: string;
begin
  if SelectedFileName = '' then
  begin
    ShowMessage('Пожалуйста, сначала выберите файл.');
    Exit;
  end;

    NewWordText := edtNewByte.Text;
    while Length(NewWordText) < 3 do
    NewWordText := '0' + NewWordText;

  if not TryStrToInt(edtNewByte.Text, NewWordInt) or (NewWordInt < 0) or (NewWordInt > 65535) then
  begin
    ShowMessage('Неверное значение. Должно быть от 0 до 65535.');
    Exit;
  end;

  NewWord := Word(NewWordInt);
  ChangeBytesInFile(SelectedFileName, BytePosition, NewWord, NewWordText);
  ShowMessage('ID успешно изменен.');
end;

procedure TForm1.ChangeBytesInFile(const FileName: string; BytePosition: Int64; NewWord: Word; NewWordText: string);
var
  FileStream: TFileStream;
  BaseFileName, BeforeNumber, AfterNumber, FileExt: string;
  UnderscoreIndex, i: Integer;
  NewFileName: string;
begin
  FileStream := TFileStream.Create(FileName, fmOpenReadWrite);
  try
    FileStream.Seek(BytePosition, soBeginning);
    FileStream.WriteBuffer(NewWord, SizeOf(NewWord));
  finally
    FileStream.Free;
  end;

  // Изменение имени файла
  BaseFileName := ExtractFileName(FileName);
  FileExt := ExtractFileExt(FileName);
  NewFileName := '';

  UnderscoreIndex := 0;

  // Поиск второго подчеркивания
  for i := 1 to Length(BaseFileName) do
  begin
    if BaseFileName[i] = '_' then
    begin
      Inc(UnderscoreIndex);
      if UnderscoreIndex = 2 then
      begin
        Break;
      end;
    end;
  end;

  // Если найдено второе подчеркивание, изменить имя файла
  if UnderscoreIndex >= 2 then
  begin
    // Определение частей имени файла перед и после числа
    BeforeNumber := Copy(BaseFileName, 1, LastDelimiter('_', BaseFileName));
    AfterNumber := Copy(BaseFileName, LastDelimiter('_', BaseFileName) + 4, Length(BaseFileName));
    NewFileName := BeforeNumber + NewWordText + AfterNumber;

    // Переименование файла
    RenameFile(FileName, ExtractFilePath(FileName) + NewFileName);
  end;
end;


procedure TForm1.ReadBytesFromFile(const FileName: string; BytePosition: Int64; var WordValue: Word);
var
  FileStream: TFileStream;
begin
  FileStream := TFileStream.Create(FileName, fmOpenRead);
  try
    FileStream.Seek(BytePosition, soBeginning);
    FileStream.ReadBuffer(WordValue, SizeOf(WordValue));
  finally
    FileStream.Free;
  end;
end;

end.

